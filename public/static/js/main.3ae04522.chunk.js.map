{"version":3,"sources":["services/data-service.js","store/actions.js","components/MainGameHeadline.js","components/GameBoard/SingleCell.js","components/GameBoard/SingleRow.js","components/GameBoard/GameBoard.js","components/Timer.js","components/Lives.js","components/Smiley.js","components/ChangeDifficulty.js","components/Flags.js","pages/MainGamePage.js","App.js","store/reducers.js","store/store.js","index.js"],"names":["dataService","buildNewBoard","makeId","_save","_load","updateCell","placeMines","openAround","showBombs","key","item","localStorage","setItem","JSON","stringify","Promise","resolve","payload","parse","getItem","size","a","board","ii","push","jj","_id","mineInCell","flagInCell","cellClicked","minesAround","row","column","cellContents","splice","numMines","minesPlaced","Math","random","ll","mm","updateMinesAround","counter","cell","oldBoard","length","toReturnBoard","text","possible","charAt","floor","num","dispatch","type","gameBoard","changeBoardSize","boardSize","changeNumOfMines","numOfMines","changeGameOn","order","changeGameOver","changeLives","changeSmiley","changeFlags","changeTime","MainGameHeadline","className","mapDispatchToProps","SingleCell","connect","state","props","useSelector","useState","timeOutMines","setTimeOutMines","cellBackground","setCellBackground","handleLeftClick","ev","preventDefault","gameOver","gameOn","newBoard","cloneDeep","clearTimeout","lives","setTimeout","handleRightClick","numOfFlags","useEffect","checkVictory","showNeutralized","onClick","onContextMenu","SingleRow","map","timerInterval","GameBoard","idx","Timer","seconds","minutes","hours","hundreds","time","setTime","timeToShow","setTimeToShow","updateTime","tempTime","undefined","setInterval","clearInterval","zeroTimer","Lives","Smiley","smiley","resetGame","changeSafeClicks","ChangeDifficulty","Flags","flags","MainGamePage","getNumOfMines","geteZeroTimer","App","exact","path","element","defaultState","store","createStore","action","safeClicks","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAGaA,G,MAAc,CACvBC,c,4CACAC,SACAC,QACAC,QACAC,W,4CACAC,W,4CACAC,aACAC,U,8CAIJ,SAASL,EAAMM,EAAKC,GAGhB,OAFAC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,IAElCK,QAAQC,QAAQN,GAI3B,SAASN,EAAMa,GACX,IAAMP,EAAOG,KAAKK,MAAMP,aAAaQ,QAAQF,IAC7C,OAAOF,QAAQC,QAAQN,G,4CAK3B,WAA6BU,GAA7B,mBAAAC,EAAA,sDAEI,IADIC,EAAQ,GACHC,EAAK,EAAGA,EAAKH,EAAMG,IAExB,IADAD,EAAME,KAAK,IACFC,EAAK,EAAGA,EAAKL,EAAMK,IACxBH,EAAMC,GAAIE,GAAM,CAAEC,IAAKxB,IAAUyB,YAAY,EAAOC,YAAY,EAAOC,aAAa,EAAOC,aAAc,EAAGC,IAAKR,EAAIS,OAAQP,EAAIQ,aAAc,IAL3J,gBAOU9B,EAAM,YAAamB,GAP7B,gCAQWA,GARX,4C,kEAWA,WAA0BL,GAA1B,eAAAI,EAAA,sEACsBjB,EAAM,aAD5B,cACQkB,EADR,QAGUL,EAAQc,KAAKG,OAAOjB,EAAQe,OAAQ,EAAGf,GAHjD,SAIUd,EAAM,YAAamB,GAJ7B,gCAKWA,GALX,4C,kEASA,+CAAAD,EAAA,6DAA2BD,EAA3B,EAA2BA,KAAMe,EAAjC,EAAiCA,SAAUJ,EAA3C,EAA2CA,IAAKC,EAAhD,EAAgDA,OAGxCI,EAAc,EAHtB,SAIsBhC,EAAM,aAJ5B,OAIQkB,EAJR,mBAKWc,EAAcD,GALzB,iBAMiBZ,EAAK,EANtB,YAMyBA,EAAKH,GAN9B,iBAOqBK,EAAK,EAP1B,YAO6BA,EAAKL,GAPlC,oBAUoBgB,IAAgBD,EAVpC,wDAWoBZ,IAAOQ,GAAON,IAAOO,EAXzC,4DAYoBV,EAAMC,GAAIE,GAAIE,WAZlC,wDAayBU,KAAKC,SAAYH,GAAYf,EAAOA,KAAUE,EAAMC,GAAIE,GAAIE,YAAa,EAAMS,KAbxG,gBAOwCX,IAPxC,uBAMoCF,IANpC,8CAkBI,IAASgB,EAAK,EAAGA,EAAKnB,EAAMmB,IACxB,IAASC,EAAK,EAAGA,EAAKpB,EAAMoB,IACxBlB,EAAMiB,GAAIC,GAAIV,YAAcW,EAAkBnB,EAAOF,EAAMmB,EAAIC,GApB3E,iBAwBUrC,EAAM,YAAamB,GAxB7B,iCAyBWA,GAzBX,6C,sBA4BA,SAASmB,EAAkBnB,EAAOF,EAAMW,EAAKC,GAEzC,IADA,IAAIU,EAAU,EACLnB,EAAKQ,EAAI,EAAGR,EAAKQ,EAAI,EAAGR,IAC7B,IAAK,IAAIE,EAAKO,EAAO,EAAGP,EAAKO,EAAO,EAAGP,IAC/BF,EAAK,GAAKE,EAAK,GAAKF,GAAMH,GAAQK,GAAML,GAASG,IAAOQ,GAAON,IAAOO,GACjEV,EAAMC,GAAIE,GAAIE,YAAae,IAG5C,OAAOA,E,SAGInC,E,8EAAf,WAA0BoC,GAA1B,6BAAAtB,EAAA,6DAEQU,EAAMY,EAAKZ,IACXC,EAASW,EAAKX,OAHtB,SAIyB5B,EAAM,aAJ/B,OAIQwC,EAJR,OAKQxB,EAAOwB,EAASC,OAEXtB,EAAKQ,EAAI,EAPtB,YAOyBR,EAAKQ,EAAI,GAPlC,iBAQiBN,EAAKO,EAAO,EAR7B,YAQgCP,EAAKO,EAAO,GAR5C,kCAS8B5B,EAAM,aATpC,WASgBkB,EAThB,SAUgBC,EAAK,GAAKE,EAAK,GAAKF,GAAMH,GAAQK,GAAML,IAAsC,IAA9BE,EAAMC,GAAIE,GAAII,cAAqD,IAA7BP,EAAMC,GAAIE,GAAIG,YAVpH,+DAWYN,EAAMC,GAAIE,GAAII,aAAc,EACxBP,EAAMC,GAAIE,GAAIK,YAAc,EAAIR,EAAMC,GAAIE,GAAIQ,aAAd,UAAgCX,EAAMC,GAAIE,GAAIK,aAAqBR,EAAMC,GAAIE,GAAIQ,aAAe,GAZhJ,UAakB9B,EAAM,YAAamB,GAbrC,WAc8C,IAA9BA,EAAMC,GAAIE,GAAIK,YAd9B,wBAegBR,EAAMC,GAAIE,GAAIQ,aAAe,GAf7C,UAgBsB1B,EAAWe,EAAMC,GAAIE,IAhB3C,QAQ+CA,IAR/C,uBAOqCF,IAPrC,wCAoB8BnB,EAAM,aApBpC,eAoBQ0C,EApBR,yBAqBWA,GArBX,6C,kEAwBA,WAAyBH,GAAzB,qBAAAtB,EAAA,sEACsBjB,EAAM,aAD5B,cACQkB,EADR,gBAEqBlB,EAAM,aAF3B,OAEQgB,EAFR,OAIaG,EAAK,EAJlB,YAIqBA,EAAKH,GAJ1B,iBAKiBK,EAAK,EALtB,YAKyBA,EAAKL,GAL9B,sBAMgBE,EAAMC,GAAIE,GAAII,aAAgBN,IAAOoB,EAAKZ,KAAON,IAAOkB,EAAKX,QAN7E,2DAQgBV,EAAMC,GAAIE,GAAII,aAAc,GAC5BP,EAAMC,GAAIE,GAAIG,WAT9B,wBAS2CN,EAAMC,GAAIE,GAAIQ,aAAe,eATxE,gCAUqBX,EAAMC,GAAIE,GAAIE,WAAaL,EAAMC,GAAIE,GAAIQ,aAAe,eAC1DX,EAAMC,GAAIE,GAAIK,YAAc,EAAKR,EAAMC,GAAIE,GAAIQ,aAAeX,EAAMC,GAAIE,GAAIK,YAAcR,EAAMC,GAAIE,GAAIQ,aAAe,GAX1I,QAKoCR,IALpC,uBAIgCF,IAJhC,wCAgBUpB,EAAM,YAAamB,GAhB7B,iCAiBWA,GAjBX,6C,sBAoBA,SAASpB,IAGL,IAHyB,IAAb2C,EAAY,uDAAH,EACjBE,EAAO,GACPC,EAAW,iEACNzB,EAAK,EAAGA,EAAKsB,EAAQtB,IAC1BwB,GAAQC,EAASC,OAAOZ,KAAKa,MAAMb,KAAKC,SAAWU,EAASH,SAEhE,OAAOE,EClIJ,SAAS9C,EAAckD,GAC1B,8CAAO,WAAOC,GAAP,eAAA/B,EAAA,sEACWrB,EAAYC,cAAckD,GADrC,OACH7B,EADG,OAEP8B,EAAS,CAACC,KAAM,eAAgBC,UAAWhC,IAFpC,2CAAP,sDAMG,SAASjB,EAAWsC,GACvB,8CAAO,WAAOS,GAAP,eAAA/B,EAAA,sEACWrB,EAAYK,WAAWsC,GADlC,OACHrB,EADG,OAEP8B,EAAS,CAACC,KAAM,eAAgBC,UAAWhC,IAFpC,2CAAP,sDAgCG,SAASiC,EAAgBnC,GAC5B,8CAAO,WAAOgC,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,YAAaiB,GADlC,OAEHgC,EAAS,CAACC,KAAM,cAAeG,UAAWpC,IAFvC,2CAAP,sDAMG,SAASqC,EAAiBN,GAC7B,8CAAO,WAAOC,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,aAAcgD,GADnC,OAEHC,EAAS,CAACC,KAAM,eAAgBK,WAAYP,IAFzC,2CAAP,sDAMG,SAASQ,EAAaC,GACzB,8CAAO,WAAOR,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,SAAUyD,GAD/B,OAEHR,EAAS,CAACC,KAAM,iBAAkBO,UAF/B,2CAAP,sDAMG,SAASC,EAAeD,GAC3B,8CAAO,WAAOR,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,WAAYyD,GADjC,OAEHR,EAAS,CAACC,KAAM,mBAAoBO,UAFjC,2CAAP,sDAMG,SAASE,EAAYX,GACxB,8CAAO,WAAOC,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,QAASgD,GAD9B,OAEHC,EAAS,CAACC,KAAM,eAAgBF,QAF7B,2CAAP,sDAaG,SAASY,EAAaH,GACzB,8CAAO,WAAOR,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,SAAUyD,GAD/B,OAEHR,EAAS,CAACC,KAAM,gBAAiBO,UAF9B,2CAAP,sDAMG,SAASI,EAAYJ,GACxB,8CAAO,WAAOR,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,aAAcyD,GADnC,OAEHR,EAAS,CAACC,KAAM,eAAgBO,UAF7B,2CAAP,sDAMG,SAASK,EAAWhD,GACvB,8CAAO,WAAOmC,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,OAAQc,GAD7B,OAGHmC,EAAS,CAACC,KAAM,cAAepC,YAH5B,2CAAP,sD,kBCvGW,SAASiD,IACpB,OACI,qBAAKC,UAAU,qBAAf,SACI,sE,4BCyIZ,IAGQC,EAAqB,CACzB/D,aACAkD,kBACAtD,gBACA0D,eACAE,iBACAJ,mBACAK,cACAC,eACAC,cACAC,aACA3D,WFtIG,SAAoBW,GACvB,8CAAO,WAAOmC,GAAP,eAAA/B,EAAA,sEACWrB,EAAYM,WAAWW,GADlC,cACHK,EADG,OAGP8B,EAAS,CAACC,KAAM,eAAgBC,UAAWhC,IAHpC,kBAIAA,GAJA,2CAAP,uDEsIAf,WF9HG,SAAoBU,GACvB,8CAAO,WAAOmC,GAAP,eAAA/B,EAAA,sEACWrB,EAAYO,WAAWU,GADlC,cACHK,EADG,OAGP8B,EAAS,CAACC,KAAM,eAAgBC,UAAWhC,IAHpC,kBAIAA,GAJA,2CAAP,uDE8HAd,UFtHG,SAAmBS,GACtB,8CAAO,WAAOmC,GAAP,eAAA/B,EAAA,sEACWrB,EAAYQ,UAAUS,GADjC,cACHK,EADG,OAEP8B,EAAS,CAACC,KAAM,eAAgBC,UAAWhC,IAFpC,kBAGAA,GAHA,2CAAP,wDEwHW+C,EAAaC,aAnBJ,SAAAC,GACpB,OAAO,eAAIA,KAkBsCH,EAAzBE,EA1J5B,SAAqBE,GAEjB,IAAID,EAAQE,aAAY,SAAAF,GAAK,OAAIA,KAC7B5B,EAAO6B,EAAM7B,KAAKA,KACtB,EAAsC+B,mBAAS,MAA/C,mBAAKC,EAAL,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,IAAnD,mBAAKG,EAAL,KAAqBC,EAArB,KAmCMC,EAAe,uCAAG,WAAOC,GAAP,iBAAA3D,EAAA,yDACpB2D,EAAGC,mBACCtC,EAAKf,YAAce,EAAKd,aAAe0C,EAAMW,UAF7B,oDAGfX,EAAMY,QAAWZ,EAAMW,SAHR,wBAIhBV,EAAMb,cAAa,GACf1C,EAAU,CACVG,KAAMmD,EAAMf,UAAWrB,SAAUoC,EAAMb,WAAY3B,IAAKY,EAAKZ,IAAKC,OAAQW,EAAKX,QANnE,SAQKwC,EAAMlE,WAAWW,GARtB,OAQZmE,EARY,OAUhBzC,EAAO0C,IAAUD,EAASzC,EAAKZ,KAAKY,EAAKX,SACzCwC,EAAMnE,WAAWsC,GAXD,YAahBA,EAAKhB,WAbW,oBAeZgD,IAAeW,aAAaX,GAAeC,EAAgB,SAC3DL,EAAMgB,MAAQ,GAhBF,wBAiBZ5C,EAAKV,aAAe,eACpBuC,EAAMV,YAAYS,EAAMgB,MAAM,GAC9Bf,EAAMnE,WAAWsC,GACjBiC,EAAgBY,YAAW,WACnBjB,EAAMW,WAAaX,EAAMY,QAAUxC,EAAKd,aAAec,EAAKf,aAC1De,EAAKV,aAAe,GACpBuC,EAAMnE,WAAWsC,GACvBgC,EAAe,QAChB,MAzBS,kCA6BRA,IAAeW,aAAaX,GAAeC,EAAgB,OAC/DJ,EAAMV,YAAYS,EAAMgB,MAAM,GAC9Bf,EAAMb,cAAa,GACnBa,EAAMX,gBAAe,GAhCT,UAiCNW,EAAMhE,UAAUmC,GAjCV,eAkCZA,EAAKV,aAAe,eACpBU,EAAKd,aAAc,EACnB2C,EAAMnE,WAAWsC,GApCL,mDAyCXA,EAAKb,YAAca,EAAKV,aAAL,UAAuBU,EAAKb,cAEpDa,EAAKV,aAAe,GACpBuC,EAAMjE,WAAWoC,IA5CD,QA8CpBA,EAAKd,aAAc,EACnB2C,EAAMnE,WAAWsC,GA/CG,4CAAH,sDAsDf8C,EAAgB,uCAAG,WAAOT,GAAP,SAAA3D,EAAA,yDACrB2D,EAAGC,iBACCN,IAAeW,aAAaX,GAAeC,EAAgB,QAC3DL,EAAMW,UAAaX,EAAMY,SAAUxC,EAAKd,YAHvB,qDAKZc,EAAKf,WALO,iBAKMe,EAAKf,YAAa,EAAOe,EAAKV,aAAe,GAAIuC,EAAMR,YAAYO,EAAMmB,WAAW,GAAIlB,EAAMnE,WAAWsC,GAL/G,2BAOXA,EAAKf,cAAc2C,EAAMmB,WAAa,GAP3B,wBAQrB/C,EAAKf,YAAa,EAClBe,EAAKV,aAAe,eATC,UAUfuC,EAAMR,YAAYO,EAAMmB,WAAW,GAVpB,yBAWflB,EAAMnE,WAAWsC,GAXF,4CAAH,sDAkCtB,OAlBAgD,qBAAU,YAtFe,WACrB,GAAIpB,EAAMmB,WAAa,EAAI,OAAO,EAElC,IAAK,IAAInE,EAAK,EAAGA,EAAKgD,EAAMf,UAAWjC,IACnC,IAAK,IAAIE,EAAK,EAAGA,EAAK8C,EAAMf,UAAW/B,IACnC,GAAK8C,EAAMjB,UAAU/B,GAAIE,GAAIG,aAAe2C,EAAMjB,UAAU/B,GAAIE,GAAIE,aAC3D4C,EAAMjB,UAAU/B,GAAIE,GAAIG,YAAc2C,EAAMjB,UAAU/B,GAAIE,GAAIE,WACtE,OAAO,EAGhB,OAAO,GA8ESiE,KAEZpB,EAAMb,cAAa,GACnBa,EAAMX,gBAAe,GACrBW,EAAMhE,UAAUmC,MAErB,CAAC4B,EAAMmB,aAEVC,qBAAU,WACDpB,EAAMY,SAAUZ,EAAMW,WACnBP,IAAeW,aAAaX,GAAeC,EAAgB,OA/G/C,WACpB,IAAK,IAAIrD,EAAK,EAAGA,EAAKgD,EAAMf,UAAWjC,IACnC,IAAK,IAAIE,EAAK,EAAGA,EAAK8C,EAAMf,UAAW/B,IACnCkB,EAAKhB,YAAcgB,EAAKf,YAAakD,EAAkB,yBACvDnC,EAAKhB,aAAegB,EAAKf,YAAakD,EAAkB,wBACvDnC,EAAKhB,YAAcgB,EAAKf,YAAakD,EAAkB,wBACvDnC,EAAKhB,YAAegB,EAAKf,YAAakD,EAAkB,IA0G7De,MAEL,CAACtB,EAAMY,OAAQZ,EAAMW,WAIpB,oBAAIf,UAAS,sBAzHTxB,EAAKd,YAAqB,OAAqB,SAyHtC,YAAiCgD,GAAkBiB,QAASf,EAAiBgB,cAAeN,EAAzG,SACK9C,EAAKV,kBCrIH,SAAS+D,EAAUxB,GAE9B,OACI,oBAAIL,UAAU,aAAd,SACKK,EAAMzC,IAAIkE,KAAI,SAAAtD,GAAI,OAAI,cAAC0B,EAAD,CAAY1B,KAAM,CAACA,SAAYA,EAAKjB,UCcvE,IChBIwE,EDmBI9B,EAAqB,CAEzBnE,iBAIWkG,EAAY7B,aATH,SAAAC,GACpB,OAAO,eAAIA,KAQqCH,EAAzBE,EAzB3B,SAAoBE,GAChB,IAAID,EAAQE,aAAY,SAAAF,GAAK,OAAIA,KAGjC,OACI,qBAAKJ,UAAU,uBAAuB4B,cAAe,SAACf,GAAQA,EAAGC,kBAAjE,SACI,gCACI,gCACEV,EAAMjB,UAAaiB,EAAMjB,UAAU2C,KAAI,SAAClE,EAAKqE,GAAS,OAAO,cAACJ,EAAD,CAAWjE,IAAKA,GAAUqE,MAAY,gCC2CrH,IAGQhC,EAAqB,CACzBH,cAGWoC,EAAQ/B,aAPC,SAAAC,GACpB,OAAO,eAAIA,KAMiCH,EAAzBE,EAxDvB,SAAgBE,GACZ,IAAID,EAAQE,aAAY,SAAAF,GAAK,OAAIA,KACjC,EAAwBG,mBAAS,CAAC4B,QAAS,EAAGC,QAAS,EAAGC,MAAO,EAAGC,SAAU,IAA9E,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCjC,mBAAS,YAA3C,mBAAKkC,EAAL,KAAiBC,EAAjB,KAMMC,EAAa,WACf,IAAIC,EAAWL,EACfK,EAAST,UACgB,KAArBS,EAAST,UAAiBS,EAAST,QAAU,EAAGS,EAASR,WACpC,KAArBQ,EAASR,UAAiBQ,EAASR,QAAU,EAAGQ,EAASP,SACtC,MAAnBO,EAASP,QAAgBO,EAASP,MAAQ,EAAGO,EAASN,YAC1DE,EAAQI,GACRF,EAAc,GAAD,OATaH,EAAKF,MAAQ,GAAM,IAAM,IAStC,OAAeE,EAAKF,MAApB,YAVcE,EAAKH,QAAU,GAAM,IAAM,IAUzC,OAAyCG,EAAKH,QAA9C,YAXcG,EAAKJ,QAAU,GAAM,IAAM,IAWzC,OAAqEI,EAAKJ,UACvF9B,EAAMP,WAAW,CAACyC,UAyBtB,OApBAf,qBAAU,WACFpB,EAAMY,aAA4B6B,IAAlBd,EAEhBA,EAAgBe,YAAYH,EAAY,KAGlCvC,EAAMY,aAA4B6B,IAAlBd,IAEtBgB,cAAchB,GACdA,OAAgBc,KAErB,CAACzC,EAAMY,SAGVQ,qBAAU,WACFgB,EAAQ,CAACL,QAAS,EAAGC,QAAS,EAAGC,MAAO,EAAGC,SAAU,IACrDI,EAAc,cACnB,CAACtC,EAAM4C,YAIN,qBAAKhD,UAAU,aAAf,SACKyC,OC/Bb,IAGQxC,EAAqB,CACzBN,eAGWsD,EAAQ9C,aAPC,SAAAC,GACpB,OAAO,eAAIA,KAMiCH,EAAzBE,EAtBvB,SAAgBE,GACZ,IAAID,EAAQE,aAAY,SAAAF,GAAK,OAAIA,KAOjC,OACI,sBAAKJ,UAAU,QAAQ2B,QAAS,WALxBvB,EAAMY,QAASX,EAAMV,YAAY,IAKzC,UACA,qBAAKK,UAAU,QAAf,SAAyBI,EAAMgB,MAAQ,EAAK,eAAO,iBACnD,qBAAKpB,UAAU,cAAf,SAA+BI,EAAMgB,MAAQ,EAAf,WAAyBhB,EAAMgB,MAAO,GAAtC,aCAtC,IAGQnB,EAAqB,CACzBL,gBAGWsD,EAAS/C,aAPA,SAAAC,GACpB,OAAO,eAAIA,KAMkCH,EAAzBE,EAlBxB,SAAiBE,GACb,IAAID,EAAQE,aAAY,SAAAF,GAAK,OAAIA,KAC3B+C,EAAS/C,EAAM+C,OAErB,OACI,qBAAKnD,UAAU,SAAS2B,QAAS,kBAAKtB,EAAM+C,UAAUhD,EAAMf,YAA5D,SACC,+BAAO8D,SCiChB,IAGQlD,EAAqB,CACzB/D,aACAkD,kBACAtD,gBACA0D,eACAE,iBACAJ,mBACAK,cACA0D,iBR2BG,SAA0BrE,GAC7B,8CAAO,WAAOC,GAAP,SAAA/B,EAAA,sEACGrB,EAAYG,MAAM,aAAcgD,GADnC,OAEHC,EAAS,CAACC,KAAM,qBAAsBF,QAFnC,2CAAP,uDQ3BAY,eACAC,cACAC,cAGWwD,EAAmBnD,aAjBV,SAAAC,GACpB,OAAO,eAAIA,KAgB4CH,EAAzBE,EAxDlC,SAA2BE,GAIvB,IAgBMiB,EAAmB,SAACT,GACtBA,EAAGC,kBAGP,OACI,sBAAKd,UAAU,oBAAf,UACI,wBAAQ2B,QAtBY,SAACd,GACzBA,EAAGC,iBACHT,EAAM+C,UAAU,IAoB0BxB,cAAeN,EAArD,kBAGA,wBAAQK,QApBc,SAACd,GAC3BA,EAAGC,iBACHT,EAAM+C,UAAU,IAkB4BxB,cAAeN,EAAvD,oBAGA,wBAAQK,QAjBY,SAACd,GACzBA,EAAGC,iBACHT,EAAM+C,UAAU,KAe0BxB,cAAeN,EAArD,wBCnBZ,IAGQrB,GAAqB,CACzBH,cAGWyD,GAAQpD,aAPC,SAAAC,GACpB,OAAO,eAAIA,KAMiCH,GAAzBE,EAnBvB,SAAgBE,GAEZ,IAAImD,EAAQlD,aAAY,SAAAF,GAAK,OAAIA,EAAMmB,cAEvC,OACI,sBAAKvB,UAAU,aAAf,UACI,qBAAKA,UAAU,YAAf,0BACA,qBAAKA,UAAU,eAAf,SAAgCwD,EAAQ,GAAT,WAAmBA,GAAUA,UC4FxE,IAGMvD,GAAqB,CACvBb,kBACAtD,gBACA0D,eACAE,iBACAJ,mBACAK,cACAC,eACAC,cACAC,aACAkD,UVPG,SAAmBlG,GACtB,OAAO,SAACmC,GACJA,EAAS,CAACC,KAAM,aAAcpC,eUQzB2G,GAAetD,aAhBJ,SAAAC,GACpB,OAAO,eAAKA,KAeqCH,GAAzBE,EAnG5B,SAAuBE,GACnB,IAAMD,EAAQE,aAAY,SAAAF,GAAK,OAAIA,KAEnCoB,qBAAU,WACNnB,EAAMjB,gBAAgB,GACtBiB,EAAMf,iBAAiB,GACvBe,EAAMb,cAAa,GACnBa,EAAMX,gBAAe,GACrBW,EAAMV,YAAY,GAClBU,EAAMT,aAAa,gBACnBS,EAAMvE,cAAc,GACpBuE,EAAMR,YAAY,GAClBQ,EAAMP,WAAW,IACjBO,EAAM2C,UAAU,KACjB,IAGH,IAAMI,EAAY,WAA6B,IAA5BnG,EAA2B,uDAApBmD,EAAMf,UAC5BgB,EAAMjB,gBAAgBnC,GACtBoD,EAAMf,iBAAiBoE,EAAczG,IACrCoD,EAAMb,cAAa,GACnBa,EAAMX,gBAAe,GACrBW,EAAMV,YAAY,GAClBU,EAAMT,aAAa,gBACnBS,EAAMvE,cAAcmB,GACpBoD,EAAMR,YAAY6D,EAAczG,IAChCoD,EAAMP,WAAW,IACjBO,EAAM2C,UAAUW,MAGdA,EAAgB,WAAM,OAAIvD,EAAM4C,WAAa,IAAc5C,EAAM4C,UAAU,EAAiB,GAE5FU,EAAgB,SAACzG,GACX,OAAQA,GACR,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,GACX,KAAK,GACD,OAAO,GACX,QACI,OAAOmD,EAAMb,aAoB7B,GAfAiC,qBAAU,WACFpB,EAAMW,UAA4B,IAAhBX,EAAMgB,MACxBf,EAAMT,aAAa,gBAGdQ,EAAMW,UAAYX,EAAMgB,MAAQ,GAGrCf,EAAMT,aAAa,kBAExB,CAACQ,EAAMW,WAKNX,EAAO,OACP,sBAAKJ,UAAU,iBAAf,UACI,cAACD,EAAD,IACA,sBAAKC,UAAU,YAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAACsD,EAAD,CAAkBF,UAAWA,IAC7B,cAAClB,EAAD,IACA,sBAAKlC,UAAU,kBAAf,UACA,cAACiD,EAAD,IACA,cAACM,GAAD,UAGJ,sBAAKvD,UAAU,mBAAf,UACA,cAACkD,EAAD,CAAQE,UAAWA,IACnB,cAACpB,EAAD,gBC5EhB,IAGM/B,GAAqB,CACzBnE,iBAGW8H,GAAMzD,aAPK,SAAAC,GACtB,OAAO,eAAIA,KAM+BH,GAAzBE,EAtBnB,SAAcE,GAEZ,OACE,cAAC,IAAD,UACE,qBAAKL,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,IAAIC,QAAS,cAACN,GAAD,e,iBCZnCO,GAAc,G,aCGPC,GAAQC,cDCN,WAAsD,IAAnC9D,EAAkC,uDAA1B4D,GAAcG,EAAY,uDAAH,GAC7D,OAAOA,EAAOjF,MACV,IAAK,eAyBL,QACI,OAAOkB,EAxBX,IAAK,eAED,OAAO,2BAAIA,GAAX,IAAkBjB,UAAWgF,EAAOhF,YACxC,IAAK,cACD,OAAO,2BAAIiB,GAAX,IAAkBf,UAAW8E,EAAO9E,YACxC,IAAK,iBACD,OAAO,2BAAIe,GAAX,IAAkBY,OAAQmD,EAAO1E,QACrC,IAAK,mBACD,OAAO,2BAAIW,GAAX,IAAkBW,SAAUoD,EAAO1E,QACvC,IAAK,eACD,OAAO,2BAAIW,GAAX,IAAkBb,WAAY4E,EAAO5E,aACzC,IAAK,eACD,OAAO,2BAAIa,GAAX,IAAkBgB,MAAO+C,EAAOnF,MACpC,IAAK,qBACD,OAAO,2BAAIoB,GAAX,IAAkBgE,WAAYD,EAAOnF,MACzC,IAAK,gBACD,OAAO,2BAAIoB,GAAX,IAAkB+C,OAAQgB,EAAO1E,QACrC,IAAK,eACD,OAAO,2BAAIW,GAAX,IAAkBmB,WAAY4C,EAAO1E,QACzC,IAAK,cACD,OAAO,2BAAIW,GAAX,IAAkBmC,KAAM4B,EAAOrH,UACnC,IAAK,aACD,OAAO,2BAAIsD,GAAX,IAAkB4C,UAAWmB,EAAOrH,aC3BJuH,aAAgBC,OCK5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAACL,GAAD,QAGJc,SAASC,eAAe,W","file":"static/js/main.3ae04522.chunk.js","sourcesContent":["import { findIndex } from \"lodash\";\r\n\r\n\r\nexport const dataService = {\r\n    buildNewBoard,\r\n    makeId,\r\n    _save,\r\n    _load,\r\n    updateCell,\r\n    placeMines,\r\n    openAround,\r\n    showBombs,\r\n}\r\n\r\n\r\nfunction _save(key, item){\r\n    localStorage.setItem(key, JSON.stringify(item))\r\n    // console.log(key, ' ', item)\r\n    return Promise.resolve(item)\r\n}\r\n\r\n\r\nfunction _load(payload){\r\n    const item = JSON.parse(localStorage.getItem(payload))\r\n    return Promise.resolve(item)\r\n}\r\n\r\n\r\n\r\nasync function buildNewBoard(size) {\r\n    let board = [];\r\n    for (var ii = 0; ii < size; ii++) {\r\n        board.push([]);\r\n        for (var jj = 0; jj < size; jj++)\r\n            board[ii][jj] = { _id: makeId(), mineInCell: false, flagInCell: false, cellClicked: false, minesAround: -1, row: ii, column: jj, cellContents: '' };\r\n    }\r\n    await _save('gameBoard', board)\r\n    return board;\r\n}\r\n\r\nasync function updateCell(payload){\r\n    let board = await _load('gameBoard')\r\n    // console.log(payload)\r\n    board[payload.row].splice(payload.column, 1, payload)\r\n    await _save('gameBoard', board)\r\n    return board\r\n}\r\n\r\n\r\nasync function placeMines({size, numMines, row, column}) {\r\n    // console.log(size, numMines, row, column)\r\n    // board[row][column].cellClicked = true\r\n    let minesPlaced = 0;\r\n    let board = await _load('gameBoard')\r\n    while (minesPlaced < numMines) {\r\n        for (var ii = 0; ii < size; ii++) {\r\n            for (var jj = 0; jj < size; jj++) {\r\n                // console.log(numMines, minesPlaced)\r\n                // const test = (ii, jj) => {return ((ii, jj) => console.log(board[ii][jj]))}\r\n                if (minesPlaced === numMines) { break };\r\n                if (ii === row && jj === column) { continue };\r\n                if (board[ii][jj].mineInCell) { continue }\r\n                else if (Math.random() < (numMines / (size * size))) { board[ii][jj].mineInCell = true; minesPlaced++ };    \r\n            }\r\n        }\r\n    }\r\n    \r\n    for (let ll = 0; ll < size; ll++){\r\n        for (let mm = 0; mm < size; mm++){\r\n            board[ll][mm].minesAround = updateMinesAround(board, size, ll, mm)\r\n        }\r\n    }        \r\n    // console.log('SAVING ', board)\r\n    await _save('gameBoard', board)\r\n    return board\r\n}\r\n\r\nfunction updateMinesAround(board, size, row, column){\r\n    let counter = 0\r\n    for (var ii = row-1; ii < row+2; ii++) {\r\n        for (var jj = column-1; jj < column+2; jj++) {\r\n            if (ii < 0 || jj < 0 || ii >= size || jj >= size || (ii === row && jj === column)) {continue}\r\n            else if (board[ii][jj].mineInCell) {counter++}\r\n        }\r\n    } \r\n    return counter  \r\n}\r\n\r\nasync function openAround(cell){\r\n    // console.log(cell)\r\n    let row = cell.row\r\n    let column = cell.column\r\n    let oldBoard = await _load('gameBoard')\r\n    let size = oldBoard.length\r\n    \r\n    for (var ii = row-1; ii < row+2; ii++) {\r\n        for (var jj = column-1; jj < column+2; jj++) {\r\n            let board = await _load('gameBoard')\r\n            if (ii < 0 || jj < 0 || ii >= size || jj >= size || board[ii][jj].cellClicked === true || board[ii][jj].flagInCell === true) {continue}\r\n            board[ii][jj].cellClicked = true\r\n            if (board[ii][jj].minesAround > 0) {board[ii][jj].cellContents = `${board[ii][jj].minesAround}`} else {board[ii][jj].cellContents = ''}\r\n            await _save('gameBoard', board )\r\n            if (board[ii][jj].minesAround === 0) {\r\n                board[ii][jj].cellContents = ''\r\n                await openAround(board[ii][jj])\r\n            }\r\n        }\r\n    }\r\n    let toReturnBoard = await _load('gameBoard')\r\n    return toReturnBoard\r\n}\r\n\r\nasync function showBombs(cell){\r\n    let board = await _load('gameBoard')\r\n    let size = await _load('boardSize')\r\n\r\n    for (let ii = 0; ii < size; ii++) {\r\n        for (let jj = 0; jj < size; jj++) {\r\n            if (board[ii][jj].cellClicked || (ii === cell.row && jj === cell.column)) {continue}\r\n            else {\r\n                board[ii][jj].cellClicked = true\r\n            if (board[ii][jj].flagInCell) {board[ii][jj].cellContents = '🚩'; continue} \r\n            else if (board[ii][jj].mineInCell) {board[ii][jj].cellContents = '💣'}\r\n            else {(board[ii][jj].minesAround > 0) ? board[ii][jj].cellContents = board[ii][jj].minesAround : board[ii][jj].cellContents = ''}\r\n            \r\n        }    \r\n        }\r\n    }\r\n    await _save('gameBoard', board)\r\n    return board\r\n}\r\n\r\nfunction makeId(length = 7) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var ii = 0; ii < length; ii++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\n","import { dataService } from \"../services/data-service\"\r\n// import { useDispatch } from \"react-redux\"\r\n// export default actions = {\r\n//     buildNewBoard\r\n// }\r\n\r\n// const dispatch = useDispatch()\r\n\r\nexport function buildNewBoard(num){ \r\n    return async (dispatch) => {\r\n    let board = await dataService.buildNewBoard(num)\r\n    dispatch({type: 'UPDATE_BOARD', gameBoard: board})\r\n}\r\n}\r\n\r\nexport function updateCell(cell){ \r\n    return async (dispatch) => {\r\n    let board = await dataService.updateCell(cell)\r\n    dispatch({type: 'UPDATE_BOARD', gameBoard: board})\r\n    }\r\n}\r\n\r\nexport function placeMines(payload){ \r\n    return async (dispatch) => {\r\n    let board = await dataService.placeMines(payload)\r\n    // console.log('HELLO!!', board)\r\n    dispatch({type: 'UPDATE_BOARD', gameBoard: board})\r\n    return board\r\n    }\r\n}\r\n\r\nexport function openAround(payload){ \r\n    return async (dispatch) => {\r\n    let board = await dataService.openAround(payload)\r\n    // console.log('HELLO!!', board)\r\n    dispatch({type: 'UPDATE_BOARD', gameBoard: board})\r\n    return board\r\n    }\r\n}\r\n\r\nexport function showBombs(payload){ \r\n    return async (dispatch) => {\r\n    let board = await dataService.showBombs(payload)\r\n    dispatch({type: 'UPDATE_BOARD', gameBoard: board})\r\n    return board\r\n    }\r\n}\r\n\r\nexport function changeBoardSize(size) {\r\n    return async (dispatch) => {\r\n        await dataService._save('boardSize', size)\r\n        dispatch({type: 'CHANGE_SIZE', boardSize: size})\r\n    }\r\n} \r\n\r\nexport function changeNumOfMines(num) {\r\n    return async (dispatch) => {\r\n        await dataService._save('numOfMines', num)\r\n        dispatch({type: 'CHANGE_MINES', numOfMines: num})\r\n    }\r\n} \r\n\r\nexport function changeGameOn(order) {\r\n    return async (dispatch) => {\r\n        await dataService._save('gameOn', order)\r\n        dispatch({type: 'CHANGE_GAME_ON', order})\r\n    }\r\n}\r\n\r\nexport function changeGameOver(order) {\r\n    return async (dispatch) => {\r\n        await dataService._save('gameOver', order)\r\n        dispatch({type: 'CHANGE_GAME_OVER', order})\r\n    }\r\n}\r\n\r\nexport function changeLives(num) {\r\n    return async (dispatch) => {\r\n        await dataService._save('lives', num)\r\n        dispatch({type: 'CHANGE_LIVES', num})\r\n    }\r\n}\r\n\r\nexport function changeSafeClicks(num) {\r\n    return async (dispatch) => {\r\n        await dataService._save('safeClicks', num)\r\n        dispatch({type: 'CHANGE_SAFE_CLICKS', num})\r\n    }\r\n}\r\n\r\nexport function changeSmiley(order) {\r\n    return async (dispatch) => {\r\n        await dataService._save('smiley', order)\r\n        dispatch({type: 'CHANGE_SMILEY', order})\r\n    }\r\n}\r\n\r\nexport function changeFlags(order) {\r\n    return async (dispatch) => {\r\n        await dataService._save('numOfFlags', order)\r\n        dispatch({type: 'CHANGE_FLAGS', order})\r\n    }\r\n}\r\n\r\nexport function changeTime(payload) {\r\n    return async (dispatch) => {\r\n        await dataService._save('time', payload)\r\n        // console.log('TIME IN ACTION: ', payload)\r\n        dispatch({type: 'CHANGE_TIME', payload})\r\n    }\r\n}\r\n\r\nexport function zeroTimer(payload) {\r\n    return (dispatch) => {\r\n        dispatch({type: 'ZERO_TIMER', payload})\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function MainGameHeadline() {\r\n    return (\r\n        <div className=\"main-game-headline\">\r\n            <h1>\r\n            💣MINESEEKER💣\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n","import cloneDeep from \"lodash.clonedeep\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { dataService } from \"../../services/data-service.js\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCell, buildNewBoard, placeMines, openAround, showBombs, changeBoardSize, changeGameOver, changeGameOn, changeNumOfMines, changeLives, changeSmiley, changeFlags, changeTime } from \"../../store/actions.js\"\r\n\r\nfunction _SingleCell(props) {\r\n    // let [safeClickTOs, setSafeClickTOs] = useState(0)\r\n    let state = useSelector(state => state)\r\n    let cell = props.cell.cell\r\n    let [timeOutMines, setTimeOutMines] = useState(null)\r\n    let [cellBackground, setCellBackground] = useState('')\r\n \r\n    const openClosed = () => {\r\n        if (cell.cellClicked) {return 'open'} else {return 'closed'}\r\n        }\r\n    \r\n    const showNeutralized = ()=> {\r\n        for (let ii = 0; ii < state.boardSize; ii++) {\r\n            for (let jj = 0; jj < state.boardSize; jj++) {\r\n            if (cell.mineInCell && cell.flagInCell) {setCellBackground('cell-green-background')}\r\n            if (cell.mineInCell && !cell.flagInCell) {setCellBackground('cell-red-background')}\r\n            if (!cell.mineInCell && cell.flagInCell) {setCellBackground('cell-blue-background')}\r\n            if (!cell.mineInCell && !cell.flagInCell) {setCellBackground('')}\r\n            }\r\n        }\r\n    }\r\n    \r\n    /////////////////////////////////////////////////////////////////////\r\n\r\n        const checkVictory = () => {\r\n        if (state.numOfFlags > 0) {return false}\r\n        // let victoryStatus = true\r\n        for (let ii = 0; ii < state.boardSize; ii++){\r\n            for (let jj = 0; jj < state.boardSize; jj++){\r\n                if ((state.gameBoard[ii][jj].flagInCell && !state.gameBoard[ii][jj].mineInCell) \r\n                    || (!state.gameBoard[ii][jj].flagInCell && state.gameBoard[ii][jj].mineInCell)) \r\n                {return false} \r\n            }\r\n        }\r\n        return true\r\n    }    \r\n    // console.log(cell)\r\n        \r\n//////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    const handleLeftClick = async (ev)=> {\r\n        ev.preventDefault()\r\n        if (cell.flagInCell || cell.cellClicked || state.gameOver) {return}\r\n        if (!state.gameOn && !state.gameOver) {\r\n            props.changeGameOn(true)\r\n            let payload = {\r\n                size: state.boardSize, numMines: state.numOfMines, row: cell.row, column: cell.column\r\n            }\r\n            let newBoard = await props.placeMines(payload)\r\n            // console.log(newBoard)\r\n            cell = cloneDeep(newBoard[cell.row][cell.column])\r\n            props.updateCell(cell)\r\n        } \r\n        if (cell.mineInCell) {\r\n            // setSafeClickTOs(safeClickTOs+1)\r\n            if (timeOutMines) {clearTimeout(timeOutMines); setTimeOutMines(null)}\r\n            if (state.lives > 1) {\r\n                cell.cellContents = '💣'\r\n                props.changeLives(state.lives-1)\r\n                props.updateCell(cell)\r\n                setTimeOutMines(setTimeout(() => {\r\n                    if (state.gameOver || !state.gameOn || cell.cellClicked || cell.flagInCell ) {return}\r\n                    else {cell.cellContents = '' \r\n                          props.updateCell(cell)}\r\n                    timeOutMines = null\r\n                }, 9000))\r\n                return\r\n            }\r\n            else {\r\n                if (timeOutMines) {clearTimeout(timeOutMines); setTimeOutMines(null)}\r\n                props.changeLives(state.lives-1)\r\n                props.changeGameOn(false)\r\n                props.changeGameOver(true)\r\n                await props.showBombs(cell)\r\n                cell.cellContents = '💥'\r\n                cell.cellClicked = true\r\n                props.updateCell(cell)\r\n                // console.log('HELLO!!!')\r\n                return\r\n            }\r\n        } \r\n        else if (cell.minesAround) {cell.cellContents = `${cell.minesAround}`} \r\n        else {\r\n            cell.cellContents = ''\r\n            props.openAround(cell)\r\n        }\r\n        cell.cellClicked = true\r\n        props.updateCell(cell)\r\n        \r\n        // console.log(cell.cellContents)\r\n        // dataService.placeMines(4, 2, props.row, props.column)\r\n        // console.log(cell.mineInCell)\r\n        }\r\n    \r\n    const handleRightClick = async (ev)=> {\r\n        ev.preventDefault()\r\n        if (timeOutMines) {clearTimeout(timeOutMines); setTimeOutMines(null)}\r\n        if (state.gameOver || !state.gameOn || cell.cellClicked) {return}\r\n        \r\n        else if (cell.flagInCell) {cell.flagInCell = false; cell.cellContents = ''; props.changeFlags(state.numOfFlags+1); props.updateCell(cell)}\r\n        \r\n        else if (!cell.flagInCell && state.numOfFlags > 0) {\r\n        cell.flagInCell = true; \r\n        cell.cellContents = '🚩'; \r\n        await props.changeFlags(state.numOfFlags-1); \r\n        await props.updateCell(cell)\r\n        // cell = cloneDeep(state.gameBoard[cell.row][cell.column])\r\n    }       \r\n    }    \r\n\r\n    useEffect(()=> {\r\n        // console.log(state.numOfFlags)\r\n        const victory = checkVictory()\r\n        if (victory){\r\n            props.changeGameOn(false)\r\n            props.changeGameOver(true)\r\n            props.showBombs(cell)\r\n        }\r\n    }, [state.numOfFlags])\r\n\r\n    useEffect(()=> {\r\n        if (!state.gameOn || state.gameOver) {\r\n            if (timeOutMines) {clearTimeout(timeOutMines); setTimeOutMines(null)}\r\n            showNeutralized()\r\n        }\r\n    }, [state.gameOn, state.gameOver])\r\n\r\n\r\n    return (\r\n        <td className={`single-cell ${openClosed()} ${cellBackground}`} onClick={handleLeftClick} onContextMenu={handleRightClick}>\r\n            {cell.cellContents}\r\n        </td>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {...state}\r\n  }\r\n  const mapDispatchToProps = {\r\n    updateCell,\r\n    changeBoardSize,\r\n    buildNewBoard,\r\n    changeGameOn,\r\n    changeGameOver,\r\n    changeNumOfMines,\r\n    changeLives,  \r\n    changeSmiley,\r\n    changeFlags,\r\n    changeTime,\r\n    placeMines,\r\n    openAround,\r\n    showBombs,\r\n  }\r\n\r\n  export const SingleCell = connect(mapStateToProps, mapDispatchToProps)(_SingleCell)\r\n\r\n  \r\n  \r\n  \r\n  \r\n  // const handleClick = (side) => { \r\n      //     return function(ev) { \r\n          //         ev.preventDefault()\r\n          //         if(side == 'left') { console.log('left was clicked') } else {  console.log('right was clicked') } } }\r\n          // {/* <td onClick={handleClick('left')} onContextMenu={handleClick('right')}> */}\r\n          // {/* |R{props.cell.row}C{props.cell.column}|  */}\r\n          \r\n         ","import React from \"react\";\r\n// import { dataService } from \"../../services/data-service\";\r\nimport {SingleCell} from './SingleCell.js'\r\n\r\nexport default function SingleRow(props) {\r\n\r\n    return (\r\n        <tr className=\"single-row\">\r\n            {props.row.map(cell => <SingleCell cell={{cell}} key={cell._id} />)}\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport SingleRow from './SingleRow.js'\r\nimport { buildNewBoard } from \"../../store/actions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction _GameBoard(props) {\r\n    let state = useSelector(state => state)\r\n    // console.log(state.numOfFlags)\r\n\r\n    return (\r\n        <div className=\"game-board-container\" onContextMenu={(ev) => {ev.preventDefault()}}>\r\n            <table>\r\n                <tbody>\r\n                {(state.gameBoard) ? state.gameBoard.map((row, idx) => {return <SingleRow row={row} key={idx} />}) : <tr></tr>}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {...state}\r\n  }\r\n  const mapDispatchToProps = {\r\n    // changeBoardSize,\r\n    buildNewBoard,\r\n    // tester,\r\n  }\r\n\r\n  export const GameBoard = connect(mapStateToProps, mapDispatchToProps)(_GameBoard)","import React, { useState } from \"react\";\r\nimport {useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { changeTime } from \"../store/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet timerInterval;\r\n\r\nfunction _Timer(props) {\r\n    let state = useSelector(state => state)\r\n    const [time, setTime] = useState({seconds: 0, minutes: 0, hours: 0, hundreds: 0})\r\n    let [timeToShow, setTimeToShow] = useState('00:00:00')\r\n\r\n    const zeroSec = () => {return (time.seconds < 10) ? '0' : ''}\r\n    const zeroMin = () => {return (time.minutes < 10) ? '0' : ''}\r\n    const zeroHr = () => {return (time.hours < 10) ? '0' : ''}\r\n    \r\n    const updateTime = () => {\r\n        let tempTime = time       \r\n        tempTime.seconds++\r\n        if (tempTime.seconds === 60) {tempTime.seconds = 0; tempTime.minutes++}\r\n        if (tempTime.minutes === 60) {tempTime.minutes = 0; tempTime.hours++}\r\n        if (tempTime.hours === 100) {tempTime.hours = 0; tempTime.hundreds++}\r\n        setTime(tempTime)\r\n        setTimeToShow(`${zeroHr()}${time.hours}:${zeroMin()}${time.minutes}:${zeroSec()}${time.seconds}`)\r\n        props.changeTime({time})\r\n    }\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n        if (state.gameOn && timerInterval === undefined) \r\n            {\r\n            timerInterval = setInterval(updateTime, 1000)\r\n            }\r\n        \r\n        else if (!state.gameOn && timerInterval !== undefined) \r\n            {\r\n            clearInterval(timerInterval); \r\n            timerInterval = undefined\r\n            } \r\n    }, [state.gameOn])\r\n    \r\n\r\n    useEffect(() => {\r\n            setTime({seconds: 0, minutes: 0, hours: 0, hundreds: 0})\r\n            setTimeToShow(`00:00:00`)\r\n    }, [state.zeroTimer])\r\n\r\n\r\n    return (\r\n        <div className=\"game-timer\">\r\n            {timeToShow}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {...state}\r\n}\r\n  const mapDispatchToProps = {\r\n    changeTime,\r\n  }\r\n\r\n  export const Timer = connect(mapStateToProps, mapDispatchToProps)(_Timer)\r\n\r\n","import React from \"react\";\r\n// import {useState, useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { changeLives } from \"../store/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction _Lives(props) {\r\n    let state = useSelector(state => state)\r\n\r\n        const noExtraLives = () => {\r\n            if (state.gameOn) {props.changeLives(1)}\r\n        }\r\n\r\n\r\n    return (\r\n        <div className=\"lives\" onClick={() => noExtraLives()}>\r\n        <div className=\"heart\">{(state.lives > 1) ? '💖' : '💔'}</div>\r\n        <div className=\"extra-lives\">{(state.lives > 1) ? `0${(state.lives)-1}` : `00`}</div>  \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {...state}\r\n  }\r\n  const mapDispatchToProps = {\r\n    changeLives,\r\n  }\r\n\r\n  export const Lives = connect(mapStateToProps, mapDispatchToProps)(_Lives)\r\n\r\n    // {/* <div className={`extra-lives-number ${(state.lives < 2) ? 'no-display' : ''}`}>{(state.lives >= 2) ? (state.lives-1) : ''}</div> */}\r\n    // {/* <div className={`heart ${(state.lives < 4) ? 'no-display' : ''}`}>{(state.lives >= 4) ? '💖' : ''}</div>\r\n    // <div className={`heart ${(state.lives < 3) ? 'no-display' : ''}`}>{(state.lives >= 3) ? '💖' : ''}</div> */}\r\n    // {/* <div className={`heart ${(state.lives < 2) ? 'no-display' : ''}`}>{(state.lives >= 2) ? '💖' : ''}</div>\r\n    // <div className={`extra-lives-zero ${(state.lives > 1) ? 'no-display' : ''}`}>{(state.lives <= 1) ? '💔' : ''}</div> */}\r\n    ","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { changeSmiley } from \"../store/actions\"\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction _Smiley(props) {\r\n    let state = useSelector(state => state)\r\n    const smiley = state.smiley\r\n\r\n    return (\r\n        <div className=\"smiley\" onClick={()=> props.resetGame(state.boardSize)} >\r\n         <span>{smiley}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {...state}\r\n  }\r\n  const mapDispatchToProps = {\r\n    changeSmiley,\r\n  }\r\n\r\n  export const Smiley = connect(mapStateToProps, mapDispatchToProps)(_Smiley)\r\n","import React from \"react\";\r\n// import { dataService } from \"../../services/data-service.js\"\r\n// import { useSelector } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCell, buildNewBoard, changeBoardSize, changeGameOver, changeGameOn, changeNumOfMines, changeLives, changeSafeClicks, changeSmiley, changeFlags, changeTime } from \"../store/actions.js\"\r\n\r\nfunction _ChangeDifficulty(props) {\r\n    // let state = useSelector(state => state)\r\n    // console.log(cell)\r\n    \r\n    const handleLeftClickEasy = (ev)=> {\r\n        ev.preventDefault()\r\n        props.resetGame(4)\r\n    }\r\n    \r\n    const handleLeftClickMedium = (ev)=> {\r\n        ev.preventDefault()\r\n        props.resetGame(8)    \r\n    }\r\n\r\n\r\n    const handleLeftClickHard = (ev)=> {\r\n        ev.preventDefault()\r\n        props.resetGame(12)\r\n    }\r\n\r\n    const handleRightClick = (ev)=> {\r\n        ev.preventDefault()    \r\n    }    \r\n\r\n    return (\r\n        <div className=\"change-difficulty\">\r\n            <button onClick={handleLeftClickEasy} onContextMenu={handleRightClick}>\r\n                Easy\r\n            </button>\r\n            <button onClick={handleLeftClickMedium} onContextMenu={handleRightClick}>\r\n                Medium\r\n            </button>\r\n            <button onClick={handleLeftClickHard} onContextMenu={handleRightClick}>\r\n                Hard\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {...state}\r\n  }\r\n  const mapDispatchToProps = {\r\n    updateCell,\r\n    changeBoardSize,\r\n    buildNewBoard,\r\n    changeGameOn,\r\n    changeGameOver,\r\n    changeNumOfMines,\r\n    changeLives, \r\n    changeSafeClicks, \r\n    changeSmiley,\r\n    changeFlags,\r\n    changeTime,\r\n  }\r\n\r\n  export const ChangeDifficulty = connect(mapStateToProps, mapDispatchToProps)(_ChangeDifficulty)\r\n\r\n  \r\n  \r\n  \r\n  ","import React, { useState } from \"react\";\r\nimport {useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { changeTime } from \"../store/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction _Flags(props) {\r\n    // let state = useSelector(state => state)\r\n    let flags = useSelector(state => state.numOfFlags)\r\n\r\n    return (\r\n        <div className=\"game-flags\">\r\n            <div className=\"flag-icon\">🚩</div>\r\n            <div className=\"num-of-flags\">{(flags < 10) ? `0${flags}` : flags}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {...state}\r\n}\r\n  const mapDispatchToProps = {\r\n    changeTime,\r\n  }\r\n\r\n  export const Flags = connect(mapStateToProps, mapDispatchToProps)(_Flags)\r\n\r\n","import React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { buildNewBoard, changeBoardSize, changeGameOver, changeGameOn, changeNumOfMines, changeLives, changeSmiley, changeFlags, changeTime, zeroTimer } from \"../store/actions.js\"\r\nimport { connect } from \"react-redux\"\r\nimport { useSelector } from \"react-redux\"\r\n// import { dataService } from \"../services/data-service.js\"\r\n//===============================================================================\r\n\r\n\r\n//COMPONENT IMPORTS /////////////////////////////\r\n//===============================================================================\r\n\r\nimport MainGameHeadline from '../components/MainGameHeadline.js'\r\nimport { GameBoard } from \"../components/GameBoard/GameBoard.js\"\r\nimport { Timer } from \"../components/Timer.js\"\r\nimport { Lives } from \"../components/Lives.js\"\r\nimport { Smiley } from \"../components/Smiley.js\"\r\nimport { ChangeDifficulty } from \"../components/ChangeDifficulty.js\"\r\nimport { Flags } from \"../components/Flags.js\"\r\n//===============================================================================\r\n\r\n// let navigate = useNavigate()\r\n\r\nfunction _MainGamePage(props) {\r\n    const state = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        props.changeBoardSize(4)\r\n        props.changeNumOfMines(2)\r\n        props.changeGameOn(false)\r\n        props.changeGameOver(false)\r\n        props.changeLives(4)\r\n        props.changeSmiley('🙂')\r\n        props.buildNewBoard(4)\r\n        props.changeFlags(2)\r\n        props.changeTime({})\r\n        props.zeroTimer(0)\r\n    }, [])\r\n\r\n\r\n    const resetGame = (size = state.boardSize) => {\r\n        props.changeBoardSize(size)\r\n        props.changeNumOfMines(getNumOfMines(size))\r\n        props.changeGameOn(false)\r\n        props.changeGameOver(false)\r\n        props.changeLives(4)\r\n        props.changeSmiley('🙂')\r\n        props.buildNewBoard(size)\r\n        props.changeFlags(getNumOfMines(size))\r\n        props.changeTime({})\r\n        props.zeroTimer(geteZeroTimer())\r\n    }\r\n\r\n    const geteZeroTimer = ()=> {if (state.zeroTimer <= 999) {return (state.zeroTimer+1)} else {return 0}}\r\n\r\n    const getNumOfMines = (size) => {\r\n                switch (size) {\r\n                case 4:\r\n                    return 2             \r\n                case 8:\r\n                    return 12\r\n                case 12:\r\n                    return 30    \r\n                default:\r\n                    return state.numOfMines\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (state.gameOver && state.lives === 0) {\r\n            props.changeSmiley('😥')\r\n        \r\n        }\r\n        else if (state.gameOver && state.lives > 0) {\r\n            // let points = calculatePoints()\r\n            // console.log(points)\r\n            props.changeSmiley('😎')\r\n        }    \r\n    }, [state.gameOver])\r\n\r\n\r\n\r\n\r\n    if (state) return (\r\n        <div className=\"main-game-page\">\r\n            <MainGameHeadline />\r\n            <div className=\"game-area\">\r\n                <div className=\"game-sub-area\">\r\n                    <ChangeDifficulty resetGame={resetGame} />\r\n                    <Timer />\r\n                    <div className=\"lives-and-flags\">\r\n                    <Lives />\r\n                    <Flags />\r\n                    </div>\r\n                </div>\r\n                <div className=\"smiley-and-board\">\r\n                <Smiley resetGame={resetGame} />\r\n                <GameBoard />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state }\r\n}\r\nconst mapDispatchToProps = {\r\n    changeBoardSize,\r\n    buildNewBoard,\r\n    changeGameOn,\r\n    changeGameOver,\r\n    changeNumOfMines,\r\n    changeLives,\r\n    changeSmiley,\r\n    changeFlags,\r\n    changeTime,\r\n    zeroTimer,\r\n}\r\n\r\nexport const MainGamePage = connect(mapStateToProps, mapDispatchToProps)(_MainGamePage)","import {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport {MainGamePage} from './pages/MainGamePage.js'\n// import 'assets/style/main.scss\n// import ScoreBoard from './pages/ScoreBoard.js';\nimport {connect} from 'react-redux'\nimport {buildNewBoard} from './store/actions'\n\nfunction _App(props) {\n  // console.log('APP PROPS', props)\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route exact path=\"/\" element={<MainGamePage />} />\n          {/* <Route exact path=\"/ScoreBoard\" element={<ScoreBoard/>}></Route> */}\n        </Routes>  \n\n      </div>\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {...state}\n}\nconst mapDispatchToProps = {\n  buildNewBoard,\n}\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\n","\r\nconst defaultState ={\r\n    // time: {seconds: 0, minutes: 0, hours: 0, hundreds: 0}\r\n}\r\n\r\nexport default function myReducer(state = defaultState, action = {}){\r\n    switch(action.type) {\r\n        case 'UPDATE_STATE':\r\n            return state\r\n        case 'UPDATE_BOARD':\r\n            // console.log(action.gameBoard)\r\n            return {...state, gameBoard: action.gameBoard}\r\n        case 'CHANGE_SIZE':\r\n            return {...state, boardSize: action.boardSize}\r\n        case 'CHANGE_GAME_ON':\r\n            return {...state, gameOn: action.order}\r\n        case 'CHANGE_GAME_OVER':\r\n            return {...state, gameOver: action.order}\r\n        case 'CHANGE_MINES':\r\n            return {...state, numOfMines: action.numOfMines}\r\n        case 'CHANGE_LIVES':\r\n            return {...state, lives: action.num}\r\n        case 'CHANGE_SAFE_CLICKS':\r\n            return {...state, safeClicks: action.num}\r\n        case 'CHANGE_SMILEY':\r\n            return {...state, smiley: action.order}\r\n        case 'CHANGE_FLAGS':\r\n            return {...state, numOfFlags: action.order}\r\n        case 'CHANGE_TIME':\r\n            return {...state, time: action.payload}\r\n        case 'ZERO_TIMER':\r\n            return {...state, zeroTimer: action.payload}\r\n        default: \r\n            return state\r\n    }   \r\n}\r\n\r\n\r\n","import {applyMiddleware, createStore} from 'redux'\r\nimport myReducer from './reducers.js'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(myReducer, applyMiddleware(thunk))\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport './assets/style/main.scss'\nimport {store} from './store/store.js'\nimport {Provider} from 'react-redux'\n\n// console.log(store)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>    \n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}